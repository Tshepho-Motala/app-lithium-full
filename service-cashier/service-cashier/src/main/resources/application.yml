spring:
  jackson:
    #    default-property-inclusion: always
    mapper:
      default-view-inclusion: true
  datasource:
    url: jdbc:mysql://localhost/lithium_cashier
    username: root
    password: mysql
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy #org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy #org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    show-sql: false
  cloud:
    stream:
      bindings:
        transactiontyperegisteroutput:
          group: transactiontyperegistergroup
          binder: rabbit
          destination: transactiontyperegisterqueue
          producer:
            required-groups: transactiontyperegistergroup
        processorsregisterinput:
          group: processorsregistergroup
          binder: rabbit
          destination: processorsregisterqueue
        statsoutputv2:
          group: statsgroupv2
          binder: rabbit
          destination: statsqueuev2
          producer:
            required-groups: statsgroupv2
        autorestrictiontriggeroutput:
          group: autorestrictiontriggergroup
          binder: rabbit
          destination: autorestrictiontriggerqueue
          producer:
            required-groups: autorestrictiontriggergroup
        geooutput:
          group: geogroup
          binder: rabbit
          destination: geoqueue
          producer:
            required-groups: geogroup
        transaction-label-accounting-output:
          group: transaction-label-accounting-group
          binder: rabbit
          destination: transaction-label-accounting-queue
          producer:
            required-groups: transaction-label-accounting-group
        userattributestriggerinput :
          group: user-attributes-trigger-group-cashier
          binder : rabbit
          destination : userattributestriggerqueue
        cashier-payment-method-migration-input:
          consumer:
            concurrency: 20
            max-attempts: 5
            back-off-initial-interval: 5000
            back-off-max-interval: 60000
            back-off-multiplier: 2.5
          group: cashier-payment-method-migration-group
          binder: rabbit
          destination: cashier-payment-method-migration-queue
        cashier-historic-transaction-migration-input:
          consumer:
            concurrency: 20
            max-attempts: 5
            back-off-initial-interval: 5000
            back-off-max-interval: 60000
            back-off-multiplier: 2.5
          group: cashier-historic-transaction-migration-group
          binder: rabbit
          destination: cashier-historic-transaction-migration-queue
        user-payment-options-migration-input:
          consumer:
            # We need to control the concurrency on this queue in env config depending on
            # the no. of pods running, to avoid access denied errors from nuvei's rate
            # limiting
            concurrency: 5
            max-attempts: 5
            back-off-initial-interval: 5000
            back-off-max-interval: 60000
            back-off-multiplier: 2.5
          group: user-payment-options-migration-group
          binder: rabbit
          destination: user-payment-options-migration-queue
        migration-exception-output:
          binder: rabbit
          destination: migration-exception-queue
          producer:
            required-groups: migration-exception-group

      rabbit:
        bindings:
          cashier-payment-method-migration-input:
            consumer:
              autoBindDlq: true
              requeueRejected: true
              republishToDlq: true
          cashier-historic-transaction-migration-input:
            consumer:
              autoBindDlq: true
              requeueRejected: true
              republishToDlq: true
          user-payment-options-migration-input:
            consumer:
              autoBindDlq: true
              requeueRejected: true
              republishToDlq: true
  thymeleaf:
    cache: false
  rabbitmq:
    listener:
      retry:
        max-attempts: 20
  flyway:
    enabled: true
    baseline-on-migrate: true

logging:
  level:
#    ROOT: WARN
#    lithium.service.accounting.provider.internal: INFO
    lithium.service.cashier: INFO
#    org.hibernate: INFO
#    org.hibernate.type: INFO
#    org.hibernate.type.descriptor.sql: INFO
#    org.hibernate.stat: INFO
#    lithium.service.cashier.stream.UserPaymentOptionsMigrationQueueProcessor: TRACE

server:
  port: 9791

feign:
  client:
    config:
      default:
        readTimeout: 20000

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 20000

ribbon:
  ReadTimeout: 30000
  ConnectTimeout: 30000

lithium:
  service:
    rabbit:
      exchange:
        fanout-exchange-list:
          - service.cashier.first.deposit
    cashier:
      jobs:
        cleanup-transaction-processing-attempt:
          cron: 0 0/10 * * * *
          page-count-per-once: 5
  #      machine-apply-access-rule-block : false
  #      allow-multiple-withdrawals : false
  services:
    db:
      load-test-data: false
    cashier:
      transaction-geo-device-labels:
        enabled: true
      transaction-default-ttl: 86400000 # 1 day
      cleanup-scheduling-in-milliseconds: 15000
      finish-pending-cancel-delay-ms: 180000
      finish-pending-cancel-interval-ms: 120000
      transaction-extra-fields-in-milliseconds: 300000
      user-payment-options-migration:
        dlq-retries: 3
        processor-account-type-mapping:
          card:
            method-code: nuvei-cc
            processor-code: nuvei-cc
          historic:
            method-code: nuvei-cc
            processor-code: nuvei-cc
          paypal:
            method-code: paypal
            processor-code: paypal